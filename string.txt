#10. Use String functions: Compare two strings using arithmatic operators
str1 = "abc"
str2 = "abc"
str3 = "abcd"
str4 = "random"
if(str1==str2):
    print("Strings are equal")
elif(len(str1)>=len(str2)):
    print("Length of string 1 is greater than string 2")
elif(len(str1)<len(str2)):
    print("Length of string 2 is greater than string 1")

"""Output
Strings are equal
"""#11. Use String functions: Remove spaces from string
str1 = "abc def "
str2 = "   bla bla bla"
str3 = "bla bla baar "
print(str1.replace(" ", ""))
print(str2.replace(" ", ""))
print(str3.replace(" ", ""))

"""Output
abcdef
blablabla
blablabaar"""#12. WAP to find substring in forward direction using find() and index()
str1 = "demo"
str2 = "the python demo is scheduled"

index=str2.find(str1)
print(index)

index=str2.find(str1)
print(index)

"""Output
11
11"""#13. WAP to find substring in backword direction using rfind() and rindex()
str1 = "demo"
str2 = "the python demo is scheduled"

print("The substring starts at index: ", str2.rfind(str1,0,len(str2)))
print("The substring starts at index: ", str2.rindex(str1,0,len(str2)))

"""Output
The substring starts at index:  11
The substring starts at index:  11"""#14. WAP to display all positions of substing in given string
str1 = "ababadbabdfabefbabab"
str2 = "ab"

for i in range(len(str1)):
    if (str1.startswith(str2, i)):
        print(i)

"""Output
0
2
7
11
16
18"""#15. Use String functions: Count substring in given string
str1 = "ababadbabdfabefbabab"
str2 = "ab"

print(str1.count(str2))

"""Output
6"""#16. Use String functions: Replace string with other sting : Correct the spelling of str1 using str2
str1 = "pixyzpple"
str2 = "nea"
print(str1.replace("zpp", str2))

"""Output
pixyneale"""
#Expalnation: replace function returns a copy of the string with the required changes and not the original string#17. Use String functions: WAP to split the string "Chistats pvt ltd"

s="Chistats pvt ltd"
x=s.split()
print(x)

"""Output
['Chistats', 'pvt', 'ltd']"""#18. Use String functions: WAP to join the strings "Chistats", "pvt", "ltd". Join with "_"

str1="Chistats"
str2="pvt"
str3="ltd"
var3 = "-".join([str1, str2,str3])
print(var3)

"""Output
Chistats-pvt-ltd"""#19. WAP to change the case of the string to Uppercase and lowercase, str : "CHisTats pVT LtD"

str="CHisTats pVT LtD"
print(str.swapcase())

"""Output
chIStATS Pvt lTd"""#2.Define multiline string mentioned below and print it
a="""Yeah, you can be the greatest, you can be the best
You can be the King Kong bangin' on your chest
You can beat the world, you can beat the war
You can talk to God, go bangin' on his door"""

#Multiline string means we can assign a multiline string to a variable by using three quotes:
print(a)#20. WAP to print true if given string starts with "Chistats" and ends with "pune"
str1 = "Chistats pvt ltd"
first="Chistats"
last="pune"
flag=0
clag=0
for i in range(len(first)):
    if(str1[i]==first[1]):
        flag=1
j=len(last)
for i in range(len(str1)-1,len(str1)-len(last),-1):
    if(str1[i]==last[j-1]):
        clag=1
    j-=1
if(flag==1 and clag==1):
    print("true")
else:
    print("false")

"""Output
false"""#21. WAP to check type of characters prsent in the string. Apply functins : isalnum(), isalphs(), isdigit(), islower(), isupper(), istitle(), isspace()
str1 = "wc2011"
str2 = "WORLDCUP"
str3 = "2011"
str4 = "world cup 2011"
str5 = "worldcup"
str6 = " "

#isalnum(), isalphs(), isdigit(), islower(), isupper(), istitle(), isspace()
print(str1.isalnum())
print(str2.isupper())
print(str3.isdigit())
print(str4.istitle())
print(str5.islower())
print(str6.isspace())

"""Output
True
True
True
False
True
True"""
#22. Formatting the string
name = "Chistats"
year = "2017"
age = "4"
#Use below formats to print the statement as "Chistats is established in the 2017 and today we are celebrating 4th birthday"
#	1. {} {} {}
#	2. {0} {1} {2}
#	3. {name} {year} {age}
print("{} is established in the {} and today we are celebrating {}th birthday".format(name,year,age))
print("{0} is established in the {1} and today we are celebrating {2}th birthday".format(name,year,age))
print("{name} is established in the {year} and today we are celebrating {age}th birthday".format(age = "4",name = "Chistats",year = "2017"))

"""Output
Chistats is established in the 2017 and today we are celebrating 4th birthday
Chistats is established in the 2017 and today we are celebrating 4th birthday
Chistats is established in the 2017 and today we are celebrating 4th birthday"""#23. WAP to print the reverse order of words from statement "Chistats is established in the 2017 and today we are celebrating 4th birthday"
s="Chistats is established in the 2017 and today we are celebrating 4th birthday"
l=s.split()
l=list(reversed(l))
print(*l)

"""Output
birthday 4th celebrating are we today and 2017 the in established is Chistats"""#24. WAP to print the reverse interna content of each word from statement "Chistats is established in the 2017 and today we are celebrating 4th birthday"
s="Chistats is established in the 2017 and today we are celebrating 4th birthday"
print(s[::-1])

"""Output
yadhtrib ht4 gnitarbelec era ew yadot dna 7102 eht ni dehsilbatse si statsihC"""#25. WAPTP characters from odd position in one lineand even positions in second line
s=input()
for i in range(len(s)):
    if(i%2==0):
        print(s[i],end="")
print("\n")
for i in range(len(s)):
    if(i%2!=0):
        print(s[i],end="")

"""Output
ankit
akt

ni"""#26. Merge two string as given below
str1 = "citt"
str2 = "hsas"
l=[]
for i in range(len(str1)):
    l.append(str1[i])
    l.append((str2[i]))
print(*l)

"""Output
c h i s t a t s"""#27. WAP to sort characters of string, first alphabets symbols followed by numeric valuesEx
str1 = "Q9W3E81"
#Output will be EQW1389
res = ''.join(sorted(str1))
l=[]
l2=[]
for i in range(len(res)):
    if(res[i].isdigit()):
        l.append(res[i])
    else:
        l2.append(res[i])
l3=l2+l
print(*l3)

"""Output
E Q W 1 3 8 9
"""#28. WAP to print the character number of time given in the strings next index
s="a5b2c3"
#output will be : aaaaabbccc
for i in range(0,len(s)-1,2):
    x=(s[i+1])
    y=int(x)
    for j in range(y):
        print(s[i],end="")

"""Output
aaaaabbccc"""
#29. WAP to print the nth alphabet from given char in the string
s= "a4k3b2"
#Output will be : aeknbd
l=[]
for i in range(1,len(s),2):
    x=s[i]
    x=int(x)
    order=ord(s[i-1])
    new=order+x
    l.append(s[i-1])
    l.append(chr(new))
print(*l)

"""Output
a e k n b d"""

#3. WAP to access and print characters from string "Lakshya toh har haal mein paana hai" usin index

s="Lakshya toh har haal mein paana hai"
for i in range(len(s)):
    print(s[i],end="")

"""Output
Lakshya toh har haal mein paana hai"""#30. WAP to remove duplicat characters from given string
s=input()
l=[]
for i in range(len(s)):
    if(s[i] not in l):
        l.append(s[i])
print(*l)

"""Output
aaankkiiit
a n k i t"""#31. WAP to print number of occurances of characted in the gven string

s=input()
l=[]
for i in range(len(s)):
    if(s[i] not in l):
        l.append(s[i])
for i in range(len(l)):
    print(l[i],"occured",s.count(l[i]),"times")

"""Output
aaannnkiit
a occured 3 times
n occured 3 times
k occured 1 times
i occured 2 times
t occured 1 times"""#33. WAP to align number 123 in print statemen as below
print(123)
print(12300)
print(123000)
print(str(123).zfill(3))
print(-123)
print(12.3)
print(-12.3)
"""32. WAP to format the numbers in print statement

format decimal 123
format floating number 123.4567
format binary number 153
format octal numner 153
format hexa decimal (lower case) 143
format hexa decimal (Upper case) 143
format int and float with sign : + and -"""

print("Float decimal {0:d}. format floating number{1:.4f}. format binary number {2:b}. "
      "format octal numner {3:o}.format hexa decimal (lower case) {4:x} format hexa decimal (Upper case) {5:X}. format int and float with sign : + and - {6:+}% {7:-}%.".format(123,123.4567,153,153,143,143,98,20.3))

"""Output
Float decimal 123. format floating number123.4567. format binary number 10011001. format octal numner 231.format hexa decimal (lower case) 8f format hexa decimal (Upper case) 8F. format int and float with sign : + and - +98% 20.3%.
"""#WAP to truncate string using format method

print("{:.5s}".format("chistats"))

"""Output
chist"""#Dynamic float format template
import math

print("{:<5.2f}".format(56.268))

"""Output
56.27"""#Define the Usage of strip() and explain with the example
txt = "          I love  banana       "

x = txt.strip()
print(x)

"""Output
I love  banana"""

"""The strip() method removes any leading (spaces at the beginning) and trailing (spaces at the end) characters"""#4. WAP to access and print characters from string "Lakshya toh har haal mein paana hai" usin slice
s="Lakshya toh har haal mein paana hai"

x=slice(len(s))

print(s[:7])

print(s[-9:])

print(s[::2])
print(s[::-1])
print(s[2:9:3])

"""Output
Lakshya
paana hai
Lkhathhrha enpaahi
iah anaap niem laah rah hot ayhskaL
kyt"""#5. Short not on behaviour of slice

"""The slice() function returns a slice object. A slice object is used to specify how to slice a sequence.
We can specify where to start the slicing, and where to end. We can also specify the step, which allows
you to e.g. slice only every other item.

syntax=slice(start, end, step)"""#6. str = "abrakadabra"
"""What will be the output of below
	str[1:6:20]
	str[::1]
	str[::-1]
	str[3:7:-1]
	str[7:4:-1]
	str[0:10000:1]
	str[-4:1:-1]
	str[-4:1:-2]
	str[5:0:1]
	str[9:0:0]
	str[0:-10:-1]
	str[0:0:1]
	str[0:-9:-2]
	str[-5:-9--2]
	str[10:-1:-1]
	str[1000:2:1]"""
str="abrakadabra"
print(str[1:6:20],
	str[::1],
	str[::-1],
	str[3:7:-1],
	str[7:4:-1],
	str[0:10000:1],
	str[-4:1:-1],
	str[-4:1:-2],
	str[5:0:1],
	str[9:0:1],
	str[0:-10:-1],
	str[0:0:1],
	str[0:-9:-2],
	str[-5:-9--2],
	str[10:-1:-1],
	str[1000:2:1])

"""Output
b abrakadabra arbadakarba  ada abrakadabra adakar aaa  """#7. WAP to access each character from string in forward and backword direction

s=input()
#forward direction
for i in range(len(s)):
    print(s[i],end="")
print("\n")
for i in range(len(s)-1,-1,-1):
    print(s[i],end="")

"""Output
ankit
ankit

tikna"""#8. Use String functions: Calculate length of string "allhailkingkong"
s="allhailkingkong"
length=len(s)
print(length)

"""Output
15"""#9. Use String functions: WAP to print true if string "bla" is present in the string "hestarted blabbering"

s="hestarted blabbering"
flag=0
for i in range(len(s)):
    if(s[i]=="b" and s[i+1]=="l" and s[i+2]=="a"):
        flag=1
if(flag==1):
    print("true")
else:
    print("false")

"""Output
true"""

#1. What is string?

A string in Python is a sequence of characters and it is a derived data type.